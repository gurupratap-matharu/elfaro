# Generated by Django 3.2.3 on 2021-06-13 19:07

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=200, verbose_name='First name')),
                ('last_name', models.CharField(max_length=200, verbose_name='Last name')),
                ('dni', models.PositiveIntegerField(help_text='Your identification number', verbose_name='DNI')),
                ('date_of_birth', models.DateField(help_text='Your date of birth as it appears on your national document.', verbose_name='Date of birth')),
                ('date_of_admission', models.DateField(help_text='The date your registered with us.', verbose_name='Date of admission')),
                ('email', models.EmailField(help_text='We will send notification emails to this email address.', max_length=254, verbose_name='Your work email')),
                ('address1', models.CharField(max_length=200, verbose_name='Address line 1')),
                ('address2', models.CharField(max_length=200, verbose_name='Address line 2')),
                ('city', models.CharField(max_length=60, verbose_name='City')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='F', max_length=2, verbose_name='Gender')),
                ('marital_status', models.CharField(choices=[('S', 'Single'), ('M', 'Married'), ('D', 'Divorced'), ('W', 'Widowed')], default='S', max_length=2, verbose_name='Marital Status')),
                ('phone_number', models.CharField(blank=True, help_text='We might drop you a message incase of an emergency', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+5491123456789'. Up to 15 digits allowed. No spaces", regex='^\\+?1?\\d{9,15}$')], verbose_name='Your cellphone number.')),
                ('permission_for_photo', models.BooleanField(default=False, help_text='Whether you give us consent to use your photograph.', verbose_name='Grant permission for photograph.')),
                ('father_first_name', models.CharField(blank=True, max_length=200, verbose_name="Father's First name")),
                ('father_last_name', models.CharField(blank=True, max_length=200, verbose_name="Father's Last name")),
                ('father_dni', models.PositiveIntegerField(help_text="The national document identification numberr of the applicant's father", null=True, verbose_name="Father's DNI")),
                ('father_email', models.EmailField(blank=True, help_text="We might send email to this address for permissions or information regarding the student's activities", max_length=254, verbose_name="Father's email")),
                ('mother_first_name', models.CharField(blank=True, max_length=200, verbose_name='Mother First name')),
                ('mother_last_name', models.CharField(blank=True, max_length=200, verbose_name='Mother Last name')),
                ('mother_dni', models.PositiveIntegerField(help_text="The national document identification number of the applicant's mother", null=True, verbose_name="Mother's DNI")),
                ('mother_email', models.EmailField(blank=True, help_text="We might send email to this address for permissions or information regarding the student's activities", max_length=254, verbose_name="Mother's email")),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ('-updated',),
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Subject name')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'ordering': ('-updated',),
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=200, verbose_name='First name')),
                ('last_name', models.CharField(max_length=200, verbose_name='Last name')),
                ('dni', models.PositiveIntegerField(help_text='Your identification number', verbose_name='DNI')),
                ('date_of_birth', models.DateField(help_text='Your date of birth as it appears on your national document', verbose_name='Date of birth')),
                ('date_of_admission', models.DateField(help_text='The date you registered with us.', verbose_name='Date of admission')),
                ('email', models.EmailField(help_text='We will send notification emails to this email address.', max_length=254, verbose_name='Your work email')),
                ('address1', models.CharField(max_length=200, verbose_name='Address line 1')),
                ('address2', models.CharField(max_length=200, verbose_name='Address line 2')),
                ('city', models.CharField(max_length=60, verbose_name='City')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='F', max_length=2, verbose_name='Gender')),
                ('marital_status', models.CharField(choices=[('S', 'Single'), ('M', 'Married'), ('D', 'Divorced'), ('W', 'Widowed')], default='S', max_length=2, verbose_name='Marital Status')),
                ('phone_number', models.CharField(blank=True, help_text='We might drop you a message incase of an emergency', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+5491123456789'. Up to 15 digits allowed. No spaces", regex='^\\+?1?\\d{9,15}$')], verbose_name='Your cellphone number.')),
                ('certified', models.BooleanField(default=False, help_text='Are you certified as a teacher?', verbose_name='Certified')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
                'ordering': ('-updated',),
            },
        ),
        migrations.CreateModel(
            name='SubjectGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The group to which the subject belongs.', max_length=255, verbose_name='Subject Group')),
                ('year', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], verbose_name='Year')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('group', models.ManyToManyField(to='classroom.Subject')),
            ],
            options={
                'verbose_name': 'SubjectGroup',
                'verbose_name_plural': 'SubjectGroups',
                'ordering': ('-updated',),
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Course Name')),
                ('batch', models.CharField(choices=[('M', 'Morning'), ('A', 'Afternoon'), ('E', 'Evening')], default='M', help_text='Time of the day when the course is conducted', max_length=1, verbose_name='Batch')),
                ('classroom', models.CharField(choices=[('A1', 'Aula-1'), ('A2', 'Aula-2'), ('A3', 'Aula-3'), ('A4', 'Aula-4'), ('A5', 'Aula-5'), ('A6', 'Aula-6'), ('A7', 'Aula-7'), ('A8', 'Aula-8'), ('A9', 'Aula-9'), ('A10', 'Aula-10'), ('B', 'Biblioteca'), ('P', 'Patio'), ('C', 'Campolter'), ('LF', 'Laboratorio FQ'), ('LT', 'Laboratorio TECH'), ('LI', 'Laboratorio De Informatica')], default='A1', help_text='Physical location where the course will be conducted.', max_length=3, verbose_name='Classroom')),
                ('division', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], verbose_name='Division')),
                ('student', models.ManyToManyField(to='classroom.Student')),
                ('subject_group', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Course', to='classroom.subjectgroup')),
                ('teacher', models.ManyToManyField(to='classroom.Teacher')),
            ],
        ),
    ]
